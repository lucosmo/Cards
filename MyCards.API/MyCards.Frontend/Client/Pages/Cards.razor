@page "/cards"

@inject HttpClient client

<h3>Cards</h3>

@if (receivedCards == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>FileReference</th>
                <th>CreatedAt</th>
                <th>FileLinked</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var card in receivedCards)
            {
                <tr>
                    <td>@card.Id</td>
                    <td>@card.Title</td>
                    <td>@card.FileReference</td>
                    <td>@card.CreatedAt</td>
                    <td>@card.FileLinked</td>
                    <td>
                        @if (!string.IsNullOrEmpty(card.FileUrl))
                        {
                            <img src="@card.FileUrl" alt="Obrazek" class="img-thumbnail" style="max-width: 50px; max-height: 50px;" />
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row">
        @foreach (var card in receivedCards)
        {
            <div class="col-4 mb-3">
                <div class="card">
                    @if (!string.IsNullOrEmpty(card.FileUrl))
                    {
                        <a href="@($"/card/{card.Id}")">
                            <img src="@card.FileUrl" alt="Obrazek" class="card-img-top" style="max-height: 150px; object-fit: cover;" />
                        </a>
                    }
                </div>
            </div>
        }
    </div>
}
@code {
    private List<CardData>? receivedCards;
    protected override async Task OnInitializedAsync()
    {
        var response = await client.GetFromJsonAsync<List<CardData>>("Card");

        receivedCards = response;
    }
}
